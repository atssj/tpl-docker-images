name: Publish Docker Image - bun-debian

on:
  push:
    tags:
      - 'bun-debian@*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Bun version to publish'
        required: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: bun

jobs:
  publish:
    name: Build and Publish
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64
          
      - name: Extract version
        id: version
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION="${GITHUB_REF_NAME#bun-debian@}"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "::notice::Using version: $VERSION"

      - name: Login to Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ steps.version.outputs.version }}-debian
            type=raw,value=latest-debian
          labels: |
            org.opencontainers.image.title=Bun on Debian
            org.opencontainers.image.description=Bun v${{ steps.version.outputs.version }} runtime on Debian
            org.opencontainers.image.version=${{ steps.version.outputs.version }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./images/bun-debian
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
