name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      force_tag:
        description: 'Force tag creation even if no changes'
        type: boolean
        default: false

permissions:
  contents: write
  pull-requests: write
  packages: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    outputs:
      tag_created: ${{ steps.tag_status.outputs.created }}
      tag_name: ${{ steps.tag_status.outputs.tag_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.2.5

      - name: Install Dependencies
        run: bun install

      - name: Create Release Pull Request or Publish
        id: changesets
        uses: changesets/action@v1
        with:
          publish: bun run release
          version: bun run version
          title: 'ðŸš€ Release Updates'
          commit: 'chore: version packages'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Debug Changesets Output
        run: |
          echo "Changesets publish output: ${{ steps.changesets.outputs.publishOutput }}"
          echo "Force tag input: ${{ github.event.inputs.force_tag }}"
          
      - name: Check for No Unpublished Projects
        id: tag_status
        if: ${{ contains(steps.changesets.outputs.publishOutput, 'No unpublished projects to publish') || github.event.inputs.force_tag == 'true' }}
        run: |
          echo "::notice::No unpublished projects detected or force tag requested. Creating manual tag..."

          # Run tag creation script
          TAG_OUTPUT=$(bun run create-tag)

          # Extract tag name from output
          TAG_NAME=$(echo "$TAG_OUTPUT" | grep "Creating tag:" | cut -d' ' -f3)

          echo "created=true" >> $GITHUB_OUTPUT
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

          echo "::notice::Tag created: $TAG_NAME"

      - name: Verify Tags
        run: |
          echo "Verifying tags..."
          git fetch --tags
          git tag -l | grep "@tpl/bun-debian@" || echo "No matching tags found"

      - name: Create GitHub Tag
        if: ${{ steps.tag_status.outputs.created == 'true' }}
        run: |
          echo "Creating GitHub tag..."
          gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"
          gh release create "${{ steps.tag_status.outputs.tag_name }}" --notes "Automated release tag creation"

  notify:
    needs: release
    if: needs.release.outputs.tag_created == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Notify Tag Creation
        run: |
          echo "::notice::Tag created: ${{ needs.release.outputs.tag_name }}"
          echo "Docker image build workflow should be triggered automatically."
