name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      force_tag:
        description: 'Force tag creation even if no changes'
        type: boolean
        default: false

permissions:
  contents: write
  pull-requests: write
  packages: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install Dependencies
        run: bun install

      - name: Create Tag
        id: tag_creation
        run: |
          # Run tag creation script and capture output
          TAG_OUTPUT=$(bun run create-tag ${{ github.event.inputs.force_tag == 'true' && '--force' || '' }})
          echo "$TAG_OUTPUT"
          
          # Parse the output for the tag name (assumes the script outputs "Creating tag: TAG_NAME")
          if echo "$TAG_OUTPUT" | grep -q "Creating tag:"; then
            TAG_NAME=$(echo "$TAG_OUTPUT" | grep "Creating tag:" | cut -d' ' -f3)
            echo "created=true" >> $GITHUB_OUTPUT
            echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
            echo "::notice::Created tag: $TAG_NAME"
          else
            echo "created=false" >> $GITHUB_OUTPUT
            echo "::notice::No tag created"
          fi

      - name: Create GitHub Release
        if: steps.tag_creation.outputs.created == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ steps.tag_creation.outputs.tag_name }}
        run: |
          if [ -f "CHANGELOG.md" ]; then
            RELEASE_NOTES=$(cat "CHANGELOG.md")
          else
            RELEASE_NOTES="Automated release $TAG_NAME"
          fi
          gh release create "$TAG_NAME" --title "Release $TAG_NAME" --notes "${RELEASE_NOTES}"